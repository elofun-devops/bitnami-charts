{{- if (include "nats.createSecret" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
stringData:
  {{- $authPwd := include "nats.password" . -}}
  {{- $clusterAuthPwd := include "nats.clusterPassword" . -}}
  {{ if .Values.configuration }}
  {{ .Values.natsFilename }}.conf: |-
    {{- include "common.tplvalues.render" ( dict "value" .Values.configuration "context" $ ) | nindent 4 }}
  {{- else -}}
  {{- if .Values.auth.enabled }}
  {{- if .Values.auth.user }}
  user-password: {{ $authPwd | quote }}
  {{- else if .Values.auth.token }}
  token: {{ .Values.auth.token | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.cluster.auth.enabled }}
  {{- if .Values.cluster.auth.user }}
  cluster-password: {{ $clusterAuthPwd | quote }}
  {{- else if .Values.cluster.auth.token }}
  token: {{ .Values.cluster.auth.token | quote }}
  {{- end }}
  {{- end }}
  {{ .Values.natsFilename }}.conf: |-
    listen: 0.0.0.0:{{ .Values.containerPorts.client }}
    http: 0.0.0.0:{{ .Values.containerPorts.monitoring }}

    # Authorization for client connections
    {{- if .Values.auth.enabled }}
    authorization {
      {{- if .Values.auth.user }}
      user: {{ .Values.auth.user | quote }}
      password: {{ $authPwd | quote }}
      {{- else if .Values.auth.token }}
      token: {{ .Values.auth.token | quote }}
      {{- else if .Values.auth.usersCredentials }}
      users: [
        {{- range $user := .Values.auth.usersCredentials }}
          { user: {{ $user.username | quote }}, password: {{ $user.password | quote }} },
        {{- end }}
      ],
      {{- end }}
      timeout:  {{ int .Values.auth.timeout }}
    }
    {{- if .Values.auth.noAuthUser }}
    no_auth_user: {{ .Values.auth.noAuthUser | quote }}
    {{- end }}
    {{- end }}

    # Logging options
    debug: {{ ternary "true" "false" (or .Values.debug.enabled .Values.diagnosticMode.enabled) }}
    trace: {{ ternary "true" "false" (or .Values.debug.trace .Values.diagnosticMode.enabled) }}
    logtime: {{ ternary "true" "false" (or .Values.debug.logtime .Values.diagnosticMode.enabled) }}
    # Pid file
    pid_file: "/opt/bitnami/nats/tmp/{{ .Values.natsFilename }}.pid"

    # Some system overrides
    {{- if .Values.maxConnections }}
    max_connections: {{ int .Values.maxConnections }}
    {{- end }}
    {{- if .Values.maxControlLine }}
    max_control_line: {{ int .Values.maxControlLine }}
    {{- end }}
    {{- if .Values.maxPayload }}
    max_payload: {{ int .Values.maxPayload }}
    {{- end }}
    {{- if .Values.writeDeadline }}
    write_deadline: {{ .Values.writeDeadline | quote }}
    {{- end }}

    # Clustering definition
    cluster {
      listen: 0.0.0.0:{{ .Values.containerPorts.cluster }}
      {{- if .Values.cluster.auth.enabled }}
      # Authorization for cluster connections
      authorization {
        {{- if .Values.cluster.auth.user }}
        user: {{ .Values.cluster.auth.user | quote }}
        password: {{ $clusterAuthPwd | quote }}
        {{- else if .Values.cluster.auth.token }}
        token: {{ .Values.cluster.auth.token | quote }}
        {{- end }}
        timeout:  1
      }
      {{- end }}
      # Routes are actively solicited and connected to from this server.
      # Other servers can connect to us if they supply the correct credentials
      # in their routes definitions from above
      routes = [
        {{- if .Values.cluster.auth.enabled }}
        {{- if .Values.cluster.auth.user }}
        nats://{{ .Values.cluster.auth.user }}:{{ $clusterAuthPwd }}@{{ include "common.names.fullname" . }}:{{ .Values.service.ports.cluster }}
        {{- else if .Values.cluster.auth.token }}
        nats://{{ .Values.cluster.auth.token }}@{{ template "common.names.fullname" . }}:{{ .Values.service.ports.cluster }}
        {{- end }}
        {{- else }}
        nats://{{ template "common.names.fullname" . }}:{{ .Values.service.ports.cluster }}
        {{- end }}
      ]
      {{- if .Values.cluster.connectRetries }}
      # Configure number of connect retries for implicit routes
      connect_retries: {{ .Values.cluster.connectRetries }}
      {{- end }}
    }
  {{- end }}
{{- end }}
